#!/usr/bin/env python
import argparse
import sys
import os
from subprocess import check_output, check_call
raise Exception('needs rewriting')
perm_cfgs = {'dirs' : 755, 'files' : 664}

# ----------------------------------------------------------------------------------------
def can_i_write(fp):
    print fp
    if fp == '/fh' or fp == '/fh/fast' or fp == '/fh/fast/matsen_e':  # dammit, why doesn't this work?
        return False
    return os.access(fp, os.W_OK)

# ----------------------------------------------------------------------------------------
parser = argparse.ArgumentParser()
parser.add_argument('--fname')
parser.add_argument('--dir')
parser.add_argument('--upwards', action='store_true', help='continue upwards through the directory structure as far as you can')
parser.add_argument('--downwards', action='store_true', help='continue recursively all the way downwards')
args = parser.parse_args()

if args.fname is not None: 
    if not os.path.exists(args.fname):
        raise Exception('file \'%s\' does not exist' % args.fname)
    if args.fname[0] != '/':  # add full path
        args.fname = os.getcwd() + '/' + args.fname
    # chmod the file
    check_call(['chmod', '-v', str(perm_cfgs['files']), args.fname])

if args.upwards:  # chmod all the parent dirs (that we can)
    partialname = args.fname
    while partialname != '/':
        partialname = '/'.join(os.path.split(partialname)[ : -1])
        if not can_i_write(partialname):
            print '  can\'t write %s' % partialname
            continue
        perms = int(check_output(['stat', '--printf=%a', partialname]))
        # check_call(['chmod', '-v', str(perm_cfgs['dirs']), partialname])
        print '  %d --> %d    %s' % (perms, perm_cfgs['dirs'], partialname)
    
    # arg, well, it fails at /fh/fast/matsen_e, but oh well, it's done all it needs to by then
